//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use super::sea_orm_active_enums::QuestionType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "form_questions")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub question_id: i32,
    pub form_id: i32,
    pub title: String,
    pub description: Option<String>,
    pub question_type: QuestionType,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::form_choices::Entity")]
    FormChoices,
    #[sea_orm(
        belongs_to = "super::form_meta_data::Entity",
        from = "Column::FormId",
        to = "super::form_meta_data::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    FormMetaData,
}

impl Related<super::form_choices::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::FormChoices.def()
    }
}

impl Related<super::form_meta_data::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::FormMetaData.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
